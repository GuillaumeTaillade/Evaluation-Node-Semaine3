doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Statistics
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css")

  body
    .container-fluid
      .row
        include sidebar.pug

        .col-md-9.ms-sm-auto.col-lg-10.px-md-4
          h2 Statistics

          // l'élément canvas
          canvas(id="statisticsChart" width="800" height="400")

    // Fin du body Scripts Bootstrap, React, et Chart.js 
    script(src="https://cdn.jsdelivr.net/npm/react@17.0.2/umd/react.development.js")
    script(src="https://cdn.jsdelivr.net/npm/react-dom@17.0.2/umd/react-dom.development.js")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js")
    script(src="https://cdn.jsdelivr.net/npm/chart.js")
    
    // script
    script.
      document.addEventListener('DOMContentLoaded', function () {
        // contexte
        var ctx = document.getElementById('statisticsChart').getContext('2d');

        // Je récupère les données
        var labels = !{JSON.stringify(labels)};
        var data = !{JSON.stringify(data)};

        // Je définit les données pour le graphique
        var chartData = {
          labels: labels,
          datasets: [{
            label: 'Nombre total de meubles par catégorie',
            data: data,
            backgroundColor: ['#3498db', '#e74c3c'],
            borderWidth: 1
          }]
        };

        // Je configure les options
        var chartOptions = {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        };

        // Je créer l'instance
        var statisticsChart = new Chart(ctx, {
          type: 'bar',
          data: chartData,
          options: chartOptions
        });
      });